
Функция GetDataGET(Запрос)
	
	ИмяМетода = Запрос.ПараметрыURL["ИмяМетода"];
	Кодировка = КодировкаТекста.UTF8;
	
	ТекстОтвета = "";
	Если ИмяМетода = "GetServiceList" Тогда
		
		СтрокаПоиска = Запрос.ПараметрыЗапроса.Получить("searchtext"); // Ведомство или услуга
		Если СтрокаПоиска = Неопределено Тогда
			СтрокаПоиска = "";
		КонецЕсли;
		СтрокаПоиска = СтрЗаменить(СтрокаПоиска, " ", "%");
		
		// Возвращаем список услуг с категориями
		
		СтруктураОтвета = Новый Структура;
		СтруктураОтвета.Вставить("ServiceList", Новый Массив);
		СтруктураОтвета.Вставить("CategoryList", Новый Массив);
		СтруктураОтвета.Вставить("DepartmentList", Новый Массив);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("СтрокаПоиска", СтрокаПоиска);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ГосУслуги.Ссылка КАК ГосУслуга,
		|	ГосУслуги.Категория КАК Категория,
		|	ГосУслуги.Ведомство КАК Ведомство
		|ПОМЕСТИТЬ ВТГосУслугиОтбором
		|ИЗ
		|	Справочник.ГосУслуги КАК ГосУслуги
		|ГДЕ
		|	(ГосУслуги.Наименование ПОДОБНО ""%"" + &СтрокаПоиска + ""%""
		|			ИЛИ ГосУслуги.Ведомство.Наименование ПОДОБНО ""%"" + &СтрокаПоиска + ""%"")
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ГосУслуги.Код КАК id,
		|	ГосУслуги.Наименование КАК name,
		|	ГосУслуги.Категория.Код КАК categoryId,
		|	ГосУслуги.Ведомство.Код КАК departmentId,
		|	ГосУслуги.Ведомство.Наименование КАК departmentName
		|ИЗ
		|	ВТГосУслугиОтбором КАК ВТГосУслугиОтбором
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГосУслуги КАК ГосУслуги
		|		ПО ВТГосУслугиОтбором.ГосУслуга = ГосУслуги.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КатегорииГосУслуг.Код КАК id,
		|	КатегорииГосУслуг.Наименование КАК name
		|ИЗ
		|	ВТГосУслугиОтбором КАК ВТГосУслугиОтбором
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КатегорииГосУслуг КАК КатегорииГосУслуг
		|		ПО ВТГосУслугиОтбором.Категория = КатегорииГосУслуг.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Ведомства.Код КАК id,
		|	Ведомства.Наименование КАК name
		|ИЗ
		|	ВТГосУслугиОтбором КАК ВТГосУслугиОтбором
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Ведомства КАК Ведомства
		|		ПО ВТГосУслугиОтбором.Ведомство = Ведомства.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТГосУслугиОтбором";
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		ВыборкаГосУслуги = РезультатЗапроса[1].Выбрать();
		Пока ВыборкаГосУслуги.Следующий() Цикл
			СтруктураГосУслуги = Новый Структура("id,name,departmentId,categoryId");
			ЗаполнитьЗначенияСвойств(СтруктураГосУслуги, ВыборкаГосУслуги);
			СтруктураОтвета.ServiceList.Добавить(СтруктураГосУслуги);
		КонецЦикла;
		
		ВыборкаКатегорииГосУслуг = РезультатЗапроса[2].Выбрать();
		Пока ВыборкаКатегорииГосУслуг.Следующий() Цикл
			СтруктураКатегорииГосУслуг = Новый Структура("id,name");
			ЗаполнитьЗначенияСвойств(СтруктураКатегорииГосУслуг, ВыборкаКатегорииГосУслуг);
			СтруктураОтвета.CategoryList.Добавить(СтруктураКатегорииГосУслуг);
		КонецЦикла;
		
		ВыборкаВедомств = РезультатЗапроса[3].Выбрать();
		Пока ВыборкаВедомств.Следующий() Цикл
			СтруктураВедомств = Новый Структура("id,name");
			ЗаполнитьЗначенияСвойств(СтруктураВедомств, ВыборкаВедомств);
			СтруктураОтвета.DepartmentList.Добавить(СтруктураВедомств);
		КонецЦикла;
		
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON);
		ЗаписатьJSON(ЗаписьJSON, СтруктураОтвета);
		ТекстОтвета = ЗаписьJSON.Закрыть();
		
	ИначеЕсли ИмяМетода = "GetField" Тогда
		
		КодГосУслуги = Запрос.ПараметрыЗапроса.Получить("service_id");
		
		// Возвращаем список полей заявления с описанием
		
		СтруктураОтвета = Новый Структура;
		СтруктураОтвета.Вставить("ServiceFields", Новый Массив);
		СтруктураОтвета.Вставить("FieldValues", Новый Массив);
		СтруктураОтвета.Вставить("RecipientCategories", Новый Массив);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ГосУслуга", Справочники.ГосУслуги.НайтиПоКоду(КодГосУслуги));
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ГосУслугиПоляЗаявления.Поле.Код КАК id,
		|	ГосУслугиПоляЗаявления.Поле.Наименование КАК name,
		|	ГосУслугиПоляЗаявления.Поле.ТипЗначения КАК type,
		|	ГосУслугиПоляЗаявления.Поле.КатегорияПолучателя КАК Категория
		|ИЗ
		|	Справочник.ГосУслуги.ПоляЗаявления КАК ГосУслугиПоляЗаявления
		|ГДЕ
		|	ГосУслугиПоляЗаявления.Ссылка = &ГосУслуга
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ГосУслугиПоляЗаявления.Поле.Код КАК fieldId,
		|	ГосУслугиПоляЗаявления.Поле.Наименование КАК fieldName,
		|	ЗначенияПолейЗаявления.Код КАК valueId,
		|	ЗначенияПолейЗаявления.Наименование КАК valueName
		|ИЗ
		|	Справочник.ГосУслуги.ПоляЗаявления КАК ГосУслугиПоляЗаявления
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЗначенияПолейЗаявления КАК ЗначенияПолейЗаявления
		|		ПО ГосУслугиПоляЗаявления.Поле = ЗначенияПолейЗаявления.Владелец
		|ГДЕ
		|	ГосУслугиПоляЗаявления.Ссылка = &ГосУслуга
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ГосУслугиКатегорииПолучателей.Категория КАК Категория
		|ИЗ
		|	Справочник.ГосУслуги.КатегорииПолучателей КАК ГосУслугиКатегорииПолучателей
		|ГДЕ
		|	ГосУслугиКатегорииПолучателей.Ссылка = &ГосУслуга";
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		ВыборкаПоляЗаявления = РезультатЗапроса[0].Выбрать();
		Пока ВыборкаПоляЗаявления.Следующий() Цикл
			СтруктураПоляЗаявления = Новый Структура("id,name");
			ЗаполнитьЗначенияСвойств(СтруктураПоляЗаявления, ВыборкаПоляЗаявления,, "id");
			СтруктураПоляЗаявления.Вставить("id", Число(ВыборкаПоляЗаявления.id));
			СтруктураПоляЗаявления.Вставить("type", ОписаниеТипаДанных(ВыборкаПоляЗаявления.type));
			СтруктураПоляЗаявления.Вставить("category", ИдентификаторЗначенияПеречисления(ВыборкаПоляЗаявления.Категория));
			СтруктураОтвета.ServiceFields.Добавить(СтруктураПоляЗаявления);
		КонецЦикла;
		
		ВыборкаЗначенияПолейЗаявления = РезультатЗапроса[1].Выбрать();
		Пока ВыборкаЗначенияПолейЗаявления.Следующий() Цикл
			СтруктураЗначениеПоляЗаявления = Новый Структура("fieldId,fieldName,valueId,valueName");
			ЗаполнитьЗначенияСвойств(СтруктураЗначениеПоляЗаявления, ВыборкаЗначенияПолейЗаявления,, "fieldId,valueId");
			СтруктураЗначениеПоляЗаявления.fieldId = Число(ВыборкаЗначенияПолейЗаявления.fieldId);
			СтруктураЗначениеПоляЗаявления.valueId = Число(ВыборкаЗначенияПолейЗаявления.valueId);
			СтруктураОтвета.FieldValues.Добавить(СтруктураЗначениеПоляЗаявления);
		КонецЦикла;
		
		ВыборкаКатегорииПолучателей = РезультатЗапроса[2].Выбрать();
		Пока ВыборкаКатегорииПолучателей.Следующий() Цикл
			СтруктураОтвета.RecipientCategories.Добавить(ИдентификаторЗначенияПеречисления(ВыборкаКатегорииПолучателей.Категория));
		КонецЦикла;
		
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON);
		ЗаписатьJSON(ЗаписьJSON, СтруктураОтвета);
		ТекстОтвета = ЗаписьJSON.Закрыть();
		
	ИначеЕсли ИмяМетода = "GetServiceHistory" Тогда
		
		СтруктураОтвета = Новый Структура;
		СтруктураОтвета.Вставить("ServiceHistory", Новый Массив);
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПредоставлениеГосуслуги.Номер КАК id,
		|	ПредоставлениеГосуслуги.Дата КАК start_date,
		|	ПредоставлениеГосуслуги.Завершен КАК completed,
		|	ПредоставлениеГосуслуги.Стартован КАК started,
		|	ПредоставлениеГосуслуги.ГосУслуга.Код КАК service_id,
		|	ПредоставлениеГосуслуги.ГосУслуга.Наименование КАК service_name,
		|	ПредоставлениеГосуслуги.ГосУслуга.Ведомство.Код КАК department_id,
		|	ПредоставлениеГосуслуги.ГосУслуга.Ведомство.Наименование КАК department_name,
		|	ПредоставлениеГосуслуги.ДатаЗаявления КАК resignation_date,
		|	ПредоставлениеГосуслуги.ОжидаемыйСрокВыполнения КАК expected_date,
		|	ПредоставлениеГосуслуги.ФактическийСрокВыполнения КАК actual_date,
		|	ПредоставлениеГосуслуги.Получатель.Наименование КАК recipient
		|ИЗ
		|	БизнесПроцесс.ПредоставлениеГосуслуги КАК ПредоставлениеГосуслуги
		|
		|УПОРЯДОЧИТЬ ПО
		|	start_date";
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		ВыборкаИсторияУслуг = РезультатЗапроса[0].Выбрать();
		Пока ВыборкаИсторияУслуг.Следующий() Цикл
			СтруктураИсторииУслуг = Новый Структура("id,start_date,completed,started,service_id,service_name,department_id,department_name,resignation_date,expected_date,actual_date,recipient");
			ЗаполнитьЗначенияСвойств(СтруктураИсторииУслуг, ВыборкаИсторияУслуг);
			СтруктураОтвета.ServiceHistory.Добавить(СтруктураИсторииУслуг);
		КонецЦикла;

		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON);
		ЗаписатьJSON(ЗаписьJSON, СтруктураОтвета);
		ТекстОтвета = ЗаписьJSON.Закрыть();
		
	КонецЕсли;
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-type", "application/json");
	Ответ = Новый HTTPСервисОтвет(200,, Заголовки);
	Ответ.УстановитьТелоИзСтроки(ТекстОтвета, Кодировка);
	Возврат Ответ;
	
КонецФункции

Функция POSTServicePOST(Запрос)
	
	ИмяМетода = Запрос.ПараметрыURL["ИмяМетода"];
	Кодировка = КодировкаТекста.UTF8;
	
	ТекстОтвета = "";
	
	Если ИмяМетода = "StartService" Тогда
		
		Попытка
		
			ТелоЗапроса = Запрос.ПолучитьТелоКакСтроку(Кодировка);
			ТекстОтвета = ТелоЗапроса;
			
			ЧтениеJSON = Новый ЧтениеJSON;
			ЧтениеJSON.УстановитьСтроку(ТелоЗапроса);
			ЗначениеJSON = ПрочитатьJSON(ЧтениеJSON);
			ЧтениеJSON.Закрыть();
			
			// Создаем заявление
			ЗаявлениеОбъект = Документы.ЗаявлениеНаПредоставлениеГосуслуги.СоздатьДокумент();
			ЗаявлениеОбъект.Дата = ТекущаяДата();
			ЗаявлениеОбъект.ГосУслуга = Справочники.ГосУслуги.НайтиПоКоду(ЗначениеJSON.service_id);
			ЗаявлениеОбъект.КаналПоступленияЗаявления = Справочники.КаналыПоступленияЗаявлений.МобильноеПриложение;
			ЗаявлениеОбъект.КатегорияПолучателя = Перечисления.КатегорияПолучателя[ЗначениеJSON.recipient_category];
			ЗаявлениеОбъект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
			
			Для Каждого ТекущаяСтрокаЗаявления Из ЗначениеJSON.fields Цикл
				НоваяСтрока = ЗаявлениеОбъект.ПоляЗаявления.Добавить();
				НоваяСтрока.Поле = ПланыВидовХарактеристик.ВидПоляЗаявления.НайтиПоКоду(Формат(ТекущаяСтрокаЗаявления.id, "ЧЦ=5; ЧВН=; ЧГ=0"));
				Если ТекущаяСтрокаЗаявления.type = "Строка"
					Или ТекущаяСтрокаЗаявления.type = "Число" Тогда
					НоваяСтрока.ЗначениеПоля = ТекущаяСтрокаЗаявления.value;
				ИначеЕсли ТекущаяСтрокаЗаявления.type = "Дата"
					Или ТекущаяСтрокаЗаявления.type = "Булево" Тогда
					НоваяСтрока.ЗначениеПоля = XMLЗначение(Тип(ТекущаяСтрокаЗаявления.type), ТекущаяСтрокаЗаявления.value);
				ИначеЕсли ТекущаяСтрокаЗаявления.type = "Значения полей заявления" Тогда
					НоваяСтрока.ЗначениеПоля = Справочники.ЗначенияПолейЗаявления.НайтиПоКоду(ТекущаяСтрокаЗаявления.value);
				КонецЕсли;
			КонецЦикла;
			
			ЗаявлениеОбъект.Записать(РежимЗаписиДокумента.Проведение);
			
			ТекстСообщения = Строка(ЗаявлениеОбъект.Ссылка);
			СтруктураОтвета = Новый Структура("result,comment", "success", ТекстСообщения);
			
		Исключение
			
			ТекстСообщения = ОписаниеОшибки();
			СтруктураОтвета = Новый Структура("result,comment", "error", ТекстСообщения);
			
		КонецПопытки;
		
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON());
		ЗаписатьJSON(ЗаписьJSON, СтруктураОтвета);
		ТекстОтвета = ЗаписьJSON.Закрыть();
		
	КонецЕсли;
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-type", "application/json");
	Ответ = Новый HTTPСервисОтвет(200,, Заголовки);
	Ответ.УстановитьТелоИзСтроки(ТекстОтвета, Кодировка);
	Возврат Ответ;
	
КонецФункции

Функция ОписаниеТипаДанных(ОписаниеТипов)
	
	ОписаниеТипаДанных = Новый Массив;
	
	Для Каждого ТекущийТип Из ОписаниеТипов.Типы() Цикл
		ОписаниеТипаДанных.Добавить(Строка(ТекущийТип));
	КонецЦикла;
	
	Возврат ОписаниеТипаДанных;
	
КонецФункции

Функция ИдентификаторЗначенияПеречисления(ЗначениеПеречисления)
	
	Если Не ЗначениеЗаполнено(ЗначениеПеречисления) Тогда
		Возврат "";
	КонецЕсли;
	
	МетаданныеПеречисления = Перечисления.КатегорияПолучателя.ЮридическоеЛицо.Метаданные();
	ИндексЗначения = Перечисления[МетаданныеПеречисления.Имя].Индекс(ЗначениеПеречисления);
	Возврат МетаданныеПеречисления.ЗначенияПеречисления[ИндексЗначения].Имя;

КонецФункции
